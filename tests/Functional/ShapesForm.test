<?php
/**
 * @file
 * Tests for the Shapes module form.
 */



/**
 * Test for the shapes form.
 */
class ShapesForm extends \ShapeBase {

    protected $validator = NULL;

    /**
     * @var \Shapes\Shapes\Circle
     */
    protected $circle = NULL;

    /**
     * @var \Shapes\Shapes\Donut
     */
    protected $donut = NULL;

    /**
     * @var \Shapes\Shapes\Triangle
     */
    protected $triangle = NULL;

    /**
     * Getinfo method.
     */
    public static function getInfo() {
        return array(
            'name' => 'Shapes: Form',
            'description' => 'Tests for the shapes form.',
            'group' => 'Shapes',
        );
    }

    /**
     * Setup method.
     */
    protected function setUp() {
        parent::setUp();

        $this->validator = new Shapes\Services\Validator;

        $this->circle = $this->createShape('Circle');
        $this->donut = $this->createShape('Donut');
        $this->triangle = $this->createShape('Triangle');
    }

    protected function createShape($type) {

        $class      = 'Shapes\Shapes\\' . $type;
        $calculator = 'Shapes\AreaCalculators\\' . $type;
        $formatter  = 'Shapes\Formatters\\' . $type;

        $config = array(
            'class' => $class,
            'validator' => $this->validator,
            'calculator' => new $calculator,
            'formatter' => new $formatter,
        );

        return Shapes\ShapesFactory::factory($config);
    }

    /**
     * Test a valid Circle.
     */
    public function testValidCircle() {

        $coords = '1 3 4.4';

        $this->_testShape('Circle', $coords);

        $this->circle->validate($coords);

        $message = $this->circle->format();
        $this->assertText($message);
    }

    /**
     * Test a valid Circle.
     */
    public function testValidDonut() {

        $coords = '1 3 4.4 5.5';

        $this->_testShape('Donut', $coords);

        $this->donut->validate($coords);

        $message = $this->donut->format();
        $this->assertText($message);
    }

    /**
     * Test a valid Triangle.
     */
    public function testValidTriangle() {

        $coords = '1 3 4.4 5.5 6.6 7.7';

        $this->_testShape('Triangle', $coords);

        $this->triangle->validate($coords);

        $message = $this->triangle->format();
        $this->assertText($message);
    }
}
